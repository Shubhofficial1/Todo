{"version":3,"sources":["component/Footer.js","firebase.js","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","List","className","ListItem","ListItemText","primary","todo","onClick","event","collection","doc","id","delete","App","useState","todos","setTodos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","value","onChange","target","Button","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,G,MARA,WACX,OACI,8BACA,yE,wCCSOC,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGEC,Y,iBCONC,EAdF,SAACC,GACV,OACI,8BACA,cAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAeC,QAASL,EAAMM,KAAKA,OACnC,cAAC,IAAD,CAAYC,QAAU,SAAAC,GAAK,OAAIpB,EAAGqB,WAAW,SAASC,IAAIV,EAAMM,KAAKK,IAAIC,oBC6CtEC,MAhDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEYF,mBAAS,IAFrB,mBAENG,EAFM,KAEAC,EAFA,KA6Bb,OAxBAC,qBACE,WACE/B,EAAGqB,WAAW,SAASW,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DN,EAASM,EAASC,KAAKC,KAAI,SAAAd,GAAG,MAC3B,CAACC,GAAGD,EAAIC,GAAGL,KAAKI,EAAIe,OAAOnB,eAGhC,IAkBF,sBAAKJ,UAAU,MAAf,UACA,iCACC,4DACA,iCACA,uBAAOwB,MAAOT,EAAOU,SAAU,SAAAnB,GAAK,OAAIU,EAASV,EAAMoB,OAAOF,UAD9D,YAEA,cAACG,EAAA,EAAD,CAAQC,KAAK,SAASvB,QAnBT,SAACC,GAEfA,EAAMuB,iBAEN3C,EAAGqB,WAAW,SAASuB,IACrB,CACE1B,KAAKW,EACLgB,UAAU5C,IAASS,UAAUoC,WAAWC,oBAG5CnB,EAAS,GAAD,mBAAKD,GAAL,CAAWE,KACnBC,EAAS,KAQgCkB,QAAQ,YAAYC,MAAM,UAAUC,UAAWrB,EAAvF,qBAEC,6BACAF,EAAMS,KAAI,SAAAlB,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,YAId,cAAC,EAAD,QCvCUiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.71e67f0a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n        <footer>&copy; Developed by Shubham Kumar</footer>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyByecrzp9lIZppz4888Ugo8njt0Jbr4Rv8\",\r\n    authDomain: \"todo-app-31126.firebaseapp.com\",\r\n    projectId: \"todo-app-31126\",\r\n    storageBucket: \"todo-app-31126.appspot.com\",\r\n    messagingSenderId: \"926487355311\",\r\n    appId: \"1:926487355311:web:dd2030ac76160dd356d95a\",\r\n    measurementId: \"G-KXFQ1EXFC3\"\r\n  });\r\n\r\nconst db=firebaseApp.firestore();\r\n\r\nexport default db;\r\n\r\n","import React from 'react'\r\nimport {List,ListItem,ListItemText} from '@material-ui/core';\r\nimport db from '../firebase'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Todo = (props) => {\r\n    return (\r\n        <div>\r\n        <List className=\"todo_list\">\r\n            <ListItem>\r\n            <ListItemText  primary={props.todo.todo}/>\r\n            <DeleteIcon onClick= {event => db.collection('todos').doc(props.todo.id).delete()}></DeleteIcon>\r\n            </ListItem>\r\n          </List>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n// <Chip\r\n//          style={{margin:10}}\r\n//          size=\"small\"\r\n//          label={props.todo.todo}\r\n//          onDelete={event => db.collection('todos').doc(props.todo.id).delete()}\r\n//          variant=\"outlined\"\r\n//          deleteIcon={<DeleteIcon />}\r\n//        />","import './App.css';\nimport Footer from './component/Footer';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport Todo from './component/Todo';\nimport db from './firebase';\nimport firebase from 'firebase'\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input,setInput] = useState('');\n\n  // Here i need something that will run everytime the firebase database changes\n  useEffect(\n    ()=>{ \n      db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n        setTodos(snapshot.docs.map(doc =>\n          ({id:doc.id,todo:doc.data().todo})\n        ))\n      })\n    },[]\n  );\n\n\n  const addTodo = (event) =>{\n    //this will fire off when we will click on the button\n    event.preventDefault();\n\n    db.collection('todos').add(\n      {\n        todo:input,\n        timestamp:firebase.firestore.FieldValue.serverTimestamp()\n      }\n    )\n    setTodos([...todos,input]);\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n    <main>\n     <h1>Whatsapp cloneðŸ¤ </h1>\n     <form>\n     <input value={input} onChange={event => setInput(event.target.value)} />&nbsp; &nbsp;\n     <Button type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\" disabled={!input}>Post</Button>\n     </form>\n      <ul>\n     {todos.map(todo=>(\n       <Todo todo={todo}/>\n     ))}\n     </ul>\n    </main>\n     <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}